# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    branches:
      - main
      - release/**

permissions:
  contents: read
  packages: write
  security-events: write

env:
  NODE_VERSION: 20
  POSTGRES_DB: projectnewtest_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - id: cache-deps
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workspace: [@common/logging, @common/types, backend, admin-panel]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install root deps
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn workspace ${{ matrix.workspace }} run lint

      - name: Build
        run: yarn workspace ${{ matrix.workspace }} run build

  test:
    needs: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Backend Unit & Integration Tests
        working-directory: apps/backend
        run: yarn test
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: ${{ env.POSTGRES_DB }}
          DB_USER: ${{ env.POSTGRES_USER }}
          DB_PASS: ${{ env.POSTGRES_PASSWORD }}

      - name: Frontend Lint
        working-directory: apps/admin-panel
        run: yarn lint

  security:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Dependency review
        uses: docker://ghcr.io/github/codeql-action/review-action:latest
        with:
          review_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v2

  docker:
    if: github.ref == 'refs/heads/main'
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: apps/backend/Dockerfile.prod
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/project-new-test-backend:latest
            ghcr.io/${{ github.repository_owner }}/project-new-test-backend:${{ github.sha }}

      - name: Build & push admin-panel image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: apps/admin-panel/Dockerfile.prod
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/project-new-test-admin-panel:latest
            ghcr.io/${{ github.repository_owner }}/project-new-test-admin-panel:${{ github.sha }}
